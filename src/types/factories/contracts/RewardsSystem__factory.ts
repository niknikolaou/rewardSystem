/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RewardsSystem,
  RewardsSystemInterface,
} from "../../contracts/RewardsSystem";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "WalletRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addPermission",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "hasPermissionToWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permissions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "removePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106d38061007e6000396000f3fe6080604052600436106100b15760003560e01c80638da5cb5b1161006957806393abbca51161004e57806393abbca5146101dd578063e074bb47146101f0578063f2fde38b1461021057600080fd5b80638da5cb5b1461016d5780638e5a9ae61461019557600080fd5b80630a9b4f641161009a5780630a9b4f641461010d5780633ccfd60b14610143578063715018a61461015857600080fd5b806301e88208146100b657806304c76af0146100f6575b600080fd5b3480156100c257600080fd5b506100e36100d136600461062c565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561010257600080fd5b5061010b610230565b005b34801561011957600080fd5b506100e361012836600461062c565b6001600160a01b031660009081526001602052604090205490565b34801561014f57600080fd5b5061010b6102c7565b34801561016457600080fd5b5061010b6103e9565b34801561017957600080fd5b506000546040516001600160a01b0390911681526020016100ed565b3480156101a157600080fd5b506101cd6101b036600461062c565b6001600160a01b0316600090815260016020526040902054151590565b60405190151581526020016100ed565b61010b6101eb36600461064e565b6103fd565b3480156101fc57600080fd5b5061010b61020b36600461062c565b61049c565b34801561021c57600080fd5b5061010b61022b36600461062c565b6104be565b61023861054e565b47806102965760405162461bcd60e51b815260206004820152602260248201527f436f6e747261637420686173206e6f20457468657220746f20776974686472616044820152613b9760f11b60648201526084015b60405180910390fd5b604051339082156108fc029083906000818181858888f193505050501580156102c3573d6000803e3d6000fd5b5050565b336000818152600160205260409020546103495760405162461bcd60e51b815260206004820152602e60248201527f5468652077616c6c657420646f65736e27742068617665207065726d6973736960448201527f6f6e20746f207769746864726177000000000000000000000000000000000000606482015260840161028d565b33600090815260016020526040902054478111156103a95760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e6365000000604482015260640161028d565b336000818152600160205260408082208290555183156108fc0291849190818181858888f193505050501580156103e4573d6000803e3d6000fd5b505050565b6103f161054e565b6103fb60006105a8565b565b61040561054e565b600061041982670de0b6b3a764000061068e565b905080341461046a5760405162461bcd60e51b815260206004820152601660248201527f496e76616c6964206465706f73697420616d6f756e7400000000000000000000604482015260640161028d565b6001600160a01b038316600090815260016020526040812080548392906104929084906106ad565b9091555050505050565b6104a461054e565b6001600160a01b0316600090815260016020526040812055565b6104c661054e565b6001600160a01b0381166105425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161028d565b61054b816105a8565b50565b6000546001600160a01b031633146103fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028d565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461062757600080fd5b919050565b60006020828403121561063e57600080fd5b61064782610610565b9392505050565b6000806040838503121561066157600080fd5b61066a83610610565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106a8576106a8610678565b500290565b808201808211156106c0576106c0610678565b9291505056fea164736f6c6343000810000a";

type RewardsSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsSystem__factory extends ContractFactory {
  constructor(...args: RewardsSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardsSystem> {
    return super.deploy(overrides || {}) as Promise<RewardsSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RewardsSystem {
    return super.attach(address) as RewardsSystem;
  }
  override connect(signer: Signer): RewardsSystem__factory {
    return super.connect(signer) as RewardsSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsSystemInterface {
    return new utils.Interface(_abi) as RewardsSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsSystem {
    return new Contract(address, _abi, signerOrProvider) as RewardsSystem;
  }
}
