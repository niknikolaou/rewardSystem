/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RewardsSystem,
  RewardsSystemInterface,
} from "../../contracts/RewardsSystem";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addPermission",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "hasPermissionToWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permissions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "removePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61072d8061007e6000396000f3fe6080604052600436106100965760003560e01c80638da5cb5b1161006957806393abbca51161004e57806393abbca51461018c578063e074bb471461019f578063f2fde38b146101bf57600080fd5b80638da5cb5b1461011c5780638e5a9ae61461014457600080fd5b806301e882081461009b57806304c76af0146100db5780633ccfd60b146100f2578063715018a614610107575b600080fd5b3480156100a757600080fd5b506100c86100b63660046105c9565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156100e757600080fd5b506100f06101df565b005b3480156100fe57600080fd5b506100f0610276565b34801561011357600080fd5b506100f0610398565b34801561012857600080fd5b506000546040516001600160a01b0390911681526020016100d2565b34801561015057600080fd5b5061017c61015f3660046105c9565b6001600160a01b0316600090815260016020526040902054151590565b60405190151581526020016100d2565b6100f061019a3660046105eb565b6103ac565b3480156101ab57600080fd5b506100f06101ba3660046105c9565b610439565b3480156101cb57600080fd5b506100f06101da3660046105c9565b61045b565b6101e76104eb565b47806102455760405162461bcd60e51b815260206004820152602260248201527f436f6e747261637420686173206e6f20457468657220746f20776974686472616044820152613b9760f11b60648201526084015b60405180910390fd5b604051339082156108fc029083906000818181858888f19350505050158015610272573d6000803e3d6000fd5b5050565b336000818152600160205260409020546102f85760405162461bcd60e51b815260206004820152602e60248201527f5468652077616c6c657420646f65736e27742068617665207065726d6973736960448201527f6f6e20746f207769746864726177000000000000000000000000000000000000606482015260840161023c565b33600090815260016020526040902054478111156103585760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e6365000000604482015260640161023c565b336000818152600160205260408082208290555183156108fc0291849190818181858888f19350505050158015610393573d6000803e3d6000fd5b505050565b6103a06104eb565b6103aa6000610545565b565b6103b46104eb565b6103bf601282610711565b34101561040e5760405162461bcd60e51b815260206004820152601660248201527f496e76616c6964206465706f73697420616d6f756e7400000000000000000000604482015260640161023c565b610419601282610711565b6001600160a01b0390921660009081526001602052604090209190915550565b6104416104eb565b6001600160a01b0316600090815260016020526040812055565b6104636104eb565b6001600160a01b0381166104df5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161023c565b6104e881610545565b50565b6000546001600160a01b031633146103aa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161023c565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146105c457600080fd5b919050565b6000602082840312156105db57600080fd5b6105e4826105ad565b9392505050565b600080604083850312156105fe57600080fd5b610607836105ad565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561066657816000190482111561064c5761064c610615565b8085161561065957918102915b93841c9390800290610630565b509250929050565b60008261067d5750600161070b565b8161068a5750600061070b565b81600181146106a057600281146106aa576106c6565b600191505061070b565b60ff8411156106bb576106bb610615565b50506001821b61070b565b5060208310610133831016604e8410600b84101617156106e9575081810a61070b565b6106f3838361062b565b806000190482111561070757610707610615565b0290505b92915050565b60006105e460ff84168361066e56fea164736f6c6343000810000a";

type RewardsSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsSystem__factory extends ContractFactory {
  constructor(...args: RewardsSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardsSystem> {
    return super.deploy(overrides || {}) as Promise<RewardsSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RewardsSystem {
    return super.attach(address) as RewardsSystem;
  }
  override connect(signer: Signer): RewardsSystem__factory {
    return super.connect(signer) as RewardsSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsSystemInterface {
    return new utils.Interface(_abi) as RewardsSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsSystem {
    return new Contract(address, _abi, signerOrProvider) as RewardsSystem;
  }
}
